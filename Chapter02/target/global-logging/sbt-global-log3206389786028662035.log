[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\malak\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\malak\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.0 (Amazon.com Inc. Java 17.0.3)
[debug]       Load.loadUnit: plugins took 107.933ms
[debug]       Load.loadUnit: defsScala took 0.4398ms
[debug] [Loading] Scanning directory C:\Users\malak\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\malak\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.7256 ms
[debug]           Load.resolveProject(global-plugins) took 47.2193ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\malak\.sbt\1.0\plugins, plugins: List(<none>))) took 86.5646ms
[debug] [Loading] Done in C:\Users\malak\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 114.0887ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2164ms
[debug]     Load.loadUnit(file:/C:/Users/malak/.sbt/1.0/plugins/, ...) took 233.4106ms
[debug]   Load.apply: load took 381.8441ms
[debug]   Load.apply: resolveProjects took 5.0031ms
[debug]   Load.apply: finalTransforms took 45.6563ms
[debug]   Load.apply: config.delegates took 6.4239ms
[debug]   Load.apply: Def.make(settings)... took 309.5815ms
[debug]   Load.apply: structureIndex took 84.7555ms
[debug]   Load.apply: mkStreams took 1.4773ms
[info] loading global plugins from C:\Users\malak\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3417.5003ms
[debug]           Load.loadUnit: plugins took 19.1521ms
[debug]           Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory C:\Users\malak\OneDrive\Desktop\Akka\Chapter02\project
[debug]             Load.loadUnit: mkEval took 4.3657ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\malak\OneDrive\Desktop\Akka\Chapter02\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.0209 ms
[info] loading settings for project chapter02-build from idea.sbt ...
[debug]               Load.resolveProject(chapter02-build) took 1.8325ms
[debug]             Load.loadTransitive: finalizeProject(Project(id chapter02-build, base: C:\Users\malak\OneDrive\Desktop\Akka\Chapter02\project, plugins: List(<none>))) took 3.1808ms
[debug] [Loading] Done in C:\Users\malak\OneDrive\Desktop\Akka\Chapter02\project, returning: (chapter02-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1824.8358ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.9506ms
[debug]         Load.loadUnit(file:/C:/Users/malak/OneDrive/Desktop/Akka/Chapter02/project/, ...) took 1849.6665ms
[debug]       Load.apply: load took 1850.5573ms
[debug]       Load.apply: resolveProjects took 0.102ms
[debug]       Load.apply: finalTransforms took 8.1131ms
[debug]       Load.apply: config.delegates took 0.4766ms
[debug]       Load.apply: Def.make(settings)... took 57.5295ms
[debug]       Load.apply: structureIndex took 32.4027ms
[debug]       Load.apply: mkStreams took 0.0028ms
[info] loading project definition from C:\Users\malak\OneDrive\Desktop\Akka\Chapter02\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 5562.3759ms
[debug]     Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory C:\Users\malak\OneDrive\Desktop\Akka\Chapter02
[debug]       Load.loadUnit: mkEval took 0.2752ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.2482 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 49.6123ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\malak\OneDrive\Desktop\Akka\Chapter02, plugins: List(<none>))) took 54.6803ms
[debug] [Loading] Done in C:\Users\malak\OneDrive\Desktop\Akka\Chapter02, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1361.5687ms
[debug]     Load.loadUnit: cleanEvalClasses took 35.2532ms
[debug]   Load.loadUnit(file:/C:/Users/malak/OneDrive/Desktop/Akka/Chapter02/, ...) took 6960.1977ms
[debug] Load.apply: load took 6963.6953ms
[debug] Load.apply: resolveProjects took 0.2162ms
[debug] Load.apply: finalTransforms took 32.9205ms
[debug] Load.apply: config.delegates took 0.357ms
[debug] Load.apply: Def.make(settings)... took 58.8271ms
[debug] Load.apply: structureIndex took 25.8864ms
[debug] Load.apply: mkStreams took 0.0034ms
[info] set current project to Chapter02 (in build file:/C:/Users/malak/OneDrive/Desktop/Akka/Chapter02/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60369 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60369, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Chapter02 (in build file:/C:/Users/malak/OneDrive/Desktop/Akka/Chapter02/)
[debug] > Exec(idea-shell, None, None)
